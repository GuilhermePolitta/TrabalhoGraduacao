Exemplos:

/*******************************************************/
/*******************One-to-many*************************/
/*******************************************************/

Em SQL: 

CREATE TABLE customers (
    customer_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_name VARCHAR(100)
);

CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT,
    amount DOUBLE,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

Em rails:

rails generate model customers customer_name:string --force
rails generate model orders customer:references amount:decimal{42.6} --force


DESAFIOS: 
1- Ignorar as linhas que criam ID para a tabela, ja que o rails ja cria sozinho e criar na mão vai atrapalhar na hora de criar as referências
1.1- Podemos tentar olhar os atributos que possuam AUTO_INCREMENT e PRIMARY KEY e ignorar
1.2- Se o campo for PRIMARY KEY mas não foi AUTO_INCREMENT quer dizer que é um outro valor qualquer que antes era uma primary key mas não um id (CPF numa tabela de usuario pro exemplos), 
isso deve ser mantido pro rails mas deixando de ser PRIMARY KEY 
2- Se o atributo começar com  FOREIGN KEY devemos fazer o references do rails
2.2- Verificar quando exatemente devemos usar plural e singular e se isso afeta o raisl generate ************VEFICICADO QUE NÃO TEM PROBLEMA ALGUM************

ATENÇÃO:
A) Usar --force no final de cada linha para evitar conflitos
B) Não existe tipo double, no lugar usar decimal{42.6} ( significa  precision: 42, scale: 6 , essa é a precisão e escala padrões para doublem em mysql)
C) Os tipos que existem são: :string, :text, :integer, :float, :decimal, :datetime, :timestamp, :time, :date, :binary, :boolean, :references

Links de referencia:
http://stackoverflow.com/questions/7861971/generate-model-using-userreferences-vs-user-idinteger
http://guides.rubyonrails.org/getting_started.html





